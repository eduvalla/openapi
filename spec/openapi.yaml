openapi: 3.0.1
info:
  title: Introduction to Instana public APIs
  termsOfService: https://www.instana.com/terms-of-use/
  contact:
    name: Â© Instana
    url: http://instana.com
    email: support@instana.com
  version: 1.190.691
  x-description: info
  x-logo:
    url: header-logo.svg
    backgroundColor: '#FAFBFC'
    altText: instana logo
servers:
- url: "https://{unit}-{tenant}.instana.io"
  description: Instana Backend
  variables:
    tenant:
      description: Customer tenant unit
      default: tenant
    unit:
      description: Customer tenant name
      default: unit
tags:
- name: Infrastructure Metrics
  x-description: tagInfrastructureMetrics
- name: Infrastructure Resources
  x-description: tagInfrastructureResources
- name: Infrastructure Catalog
  x-description: tagInfrastructureCatalog
- name: Application Metrics
  x-description: tagApplicationMetrics
- name: Application Catalog
  x-description: tagApplicationCatalog
- name: Application Resources
  x-description: tagApplicationResources
- name: Application Analyze
  x-description: tagApplicationAnalyze
- name: Application Settings
  x-description: tagApplicationSettings
- name: Website Metrics
  x-description: tagWebsiteMetrics
- name: Website Catalog
  x-description: tagWebsiteCatalog
- name: Website Configuration
  x-description: tagWebsiteConfiguration
- name: Website Analyze
  x-description: tagWebsiteAnalyze
- name: Events
  x-description: tagEvents
- name: Event Settings
  x-description: tagEventSettings
- name: Host Agent
  x-description: tagHostAgent
- name: User
  x-description: tagUser
- name: Groups
  x-description: tagUser
- name: Audit Log
  x-description: tagAuditLog
- name: API Token
  x-description: tagAPIToken
- name: Session Settings
  x-description: sessionSettings
- name: Maintenance Configuration
  x-description: tagMaintenanceConfiguration
- name: Synthetic Calls
  x-description: tagSyntheticCalls
- name: Releases
  x-description: tagReleases
- name: SLI Settings
  x-description: tagSLISettings
- name: SLI Report
  x-description: tagSLIReport
- name: Health
  x-description: tagHealth
- name: Usage
  x-description: tagUsage
paths:
  /api/host-agent/configuration:
    post:
      tags:
      - Host Agent
      summary: Update agent configuration by query
      operationId: updateConfigurationByQuery
      parameters:
      - name: query
        in: query
        schema:
          type: string
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: windowSize
        in: query
        schema:
          type: integer
          format: int64
      - name: size
        in: query
        schema:
          type: integer
          format: int32
      - name: offline
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentConfigurationUpdate'
        x-payload: updateConfigurationByQuery
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - Default
      - ApiKeyAuth:
        - canConfigureAgents
      x-description: updateConfigurationByQuery
  /api/host-agent/{hostId}/configuration:
    post:
      tags:
      - Host Agent
      summary: Update agent configuration by host
      operationId: updateConfigurationByHost
      parameters:
      - name: hostId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentConfigurationUpdate'
        x-payload: updateConfigurationByHost
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - Default
      - ApiKeyAuth:
        - canConfigureAgents
      x-description: updateConfigurationByHost
  /api/host-agent/{hostId}/logs:
    get:
      tags:
      - Host Agent
      summary: Agent download logs
      operationId: getLogs
      parameters:
      - name: hostId
        in: path
        required: true
        schema:
          type: string
      - name: download
        in: query
        schema:
          type: boolean
      - name: file
        in: query
        required: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
      security:
      - ApiKeyAuth:
        - Default
      - ApiKeyAuth:
        - canConfigureAgents
  /api/host-agent/{id}:
    get:
      tags:
      - Host Agent
      summary: Get host agent snapshot details
      operationId: getAgentSnapshot
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: windowSize
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotItem'
      security:
      - ApiKeyAuth:
        - Default
  /api/host-agent/{hostId}/update:
    post:
      tags:
      - Host Agent
      summary: Agent update
      operationId: update
      parameters:
      - name: hostId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - Default
      - ApiKeyAuth:
        - canConfigureAgents
  /api/host-agent:
    get:
      tags:
      - Host Agent
      summary: Query host agent snapshots
      operationId: search
      parameters:
      - name: query
        in: query
        schema:
          type: string
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: windowSize
        in: query
        schema:
          type: integer
          format: int64
      - name: size
        in: query
        schema:
          type: integer
          format: int32
      - name: offline
        in: query
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/application-monitoring/analyze/traces:
    post:
      tags:
      - Application Analyze
      summary: Get all traces
      operationId: getTraces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTraces'
        x-payload: getTraces
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceResult'
          x-example: TraceResult
      security:
      - ApiKeyAuth:
        - Default
      x-description: getTraces
  /api/application-monitoring/analyze/trace-groups:
    post:
      tags:
      - Application Analyze
      summary: Get grouped trace metrics
      operationId: getTraceGroups
      parameters:
      - name: fillTimeSeries
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTraceGroups'
        x-payload: getTraceGroups
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceGroupsResult'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getTraceGroups
  /api/application-monitoring/analyze/call-groups:
    post:
      tags:
      - Application Analyze
      summary: Get grouped call metrics
      operationId: getCallGroup
      parameters:
      - name: fillTimeSeries
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCallGroups'
        x-payload: getCallGroup
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallGroupsResult'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getCallGroup
  /api/application-monitoring/analyze/traces/{id}:
    get:
      tags:
      - Application Analyze
      summary: Get trace detail
      operationId: getTrace
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTrace'
      security:
      - ApiKeyAuth:
        - Default
  /api/application-monitoring/metrics/applications:
    post:
      tags:
      - Application Metrics
      summary: Get Application Metrics
      operationId: getApplicationMetrics
      parameters:
      - name: fillTimeSeries
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetApplications'
        x-payload: getApplicationMetrics
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationMetricResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/application-monitoring/metrics/services:
    post:
      tags:
      - Application Metrics
      summary: Get Service metrics
      operationId: getServicesMetrics
      parameters:
      - name: fillTimeSeries
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServices'
        x-payload: getServices
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceMetricResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/application-monitoring/metrics/endpoints:
    post:
      tags:
      - Application Metrics
      summary: Get Endpoint metrics
      operationId: getEndpointsMetrics
      parameters:
      - name: fillTimeSeries
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEndpoints'
        x-payload: getEndpoints
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointMetricResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/application-monitoring/applications:
    get:
      tags:
      - Application Resources
      summary: Get applications
      operationId: getApplications
      parameters:
      - name: nameFilter
        in: query
        schema:
          type: string
      - name: windowSize
        in: query
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
      - name: applicationBoundaryScope
        in: query
        schema:
          type: string
          enum:
          - ALL
          - INBOUND
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/application-monitoring/applications/services/endpoints:
    get:
      tags:
      - Application Resources
      summary: Get endpoints
      operationId: application.resources.endpoints
      parameters:
      - name: nameFilter
        in: query
        schema:
          type: string
      - name: types
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: technologies
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: windowSize
        in: query
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
      - name: applicationBoundaryScope
        in: query
        schema:
          type: string
          enum:
          - ALL
          - INBOUND
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/application-monitoring/applications/services:
    get:
      tags:
      - Application Resources
      summary: Get applications/services
      operationId: getApplicationServices
      parameters:
      - name: nameFilter
        in: query
        schema:
          type: string
      - name: windowSize
        in: query
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
      - name: applicationBoundaryScope
        in: query
        schema:
          type: string
          enum:
          - ALL
          - INBOUND
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/application-monitoring/services:
    get:
      tags:
      - Application Resources
      summary: Get services
      operationId: getServices
      parameters:
      - name: nameFilter
        in: query
        schema:
          type: string
      - name: windowSize
        in: query
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/application-monitoring/catalog/metrics:
    get:
      tags:
      - Application Catalog
      summary: Get Metric catalog
      operationId: getApplicationCatalogMetrics
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricDescription'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getApplicationCatalogMetrics
  /api/application-monitoring/catalog:
    get:
      tags:
      - Application Catalog
      summary: Get application tag catalog
      operationId: getApplicationTagCatalog
      parameters:
      - name: from
        in: query
        schema:
          type: integer
          format: int64
      - name: dataSource
        in: query
        schema:
          type: string
          enum:
          - CALLS
          - TRACES
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCatalog'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getApplicationTagsCatalog
  /api/application-monitoring/catalog/tags:
    get:
      tags:
      - Application Catalog
      summary: Get application tags
      operationId: getApplicationTags
      parameters:
      - name: from
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
      deprecated: true
      security:
      - ApiKeyAuth:
        - Default
      x-description: getApplicationCatalogTags
  /api/application-monitoring/settings/application/{id}:
    get:
      tags:
      - Application Settings
      summary: Application configuration
      operationId: getApplicationConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    put:
      tags:
      - Application Settings
      summary: Update application configuration
      operationId: putApplicationConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationConfig'
        required: true
        x-payload: putApplicationConfig
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    delete:
      tags:
      - Application Settings
      summary: Delete application configuration
      operationId: deleteApplicationConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
  /api/application-monitoring/settings/application:
    get:
      tags:
      - Application Settings
      summary: All Application configurations
      operationId: getApplicationConfigs
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    post:
      tags:
      - Application Settings
      summary: Add application configuration
      operationId: addApplicationConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewApplicationConfig'
        required: true
        x-payload: addApplicationConfig
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
  /api/application-monitoring/settings/http-endpoint:
    get:
      tags:
      - Application Settings
      summary: All Endpoint configurations
      operationId: getEndpointConfigs
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HttpEndpointConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    post:
      tags:
      - Application Settings
      summary: Create endpoint configuration
      operationId: createEndpointConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpEndpointConfig'
        required: true
        x-payload: createEndpointConfig
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpEndpointConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
  /api/application-monitoring/settings/http-endpoint/{id}:
    get:
      tags:
      - Application Settings
      summary: Endpoint configuration
      operationId: getEndpointConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpEndpointConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    put:
      tags:
      - Application Settings
      summary: Update endpoint configuration
      operationId: updateEndpointConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpEndpointConfig'
        required: true
        x-payload: updateEndpointConfig
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpEndpointConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    delete:
      tags:
      - Application Settings
      summary: Delete endpoint configuration
      operationId: deleteEndpointConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
  /api/application-monitoring/settings/service:
    get:
      tags:
      - Application Settings
      summary: All service configurations
      operationId: getServiceConfigs
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    put:
      tags:
      - Application Settings
      summary: Replace all service configurations
      operationId: replaceAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceConfig'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    post:
      tags:
      - Application Settings
      summary: Add service configuration
      operationId: addServiceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConfig'
        required: true
        x-payload: addEndpointConfig
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
  /api/application-monitoring/settings/service/{id}:
    get:
      tags:
      - Application Settings
      summary: Service configuration
      operationId: getServiceConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    put:
      tags:
      - Application Settings
      summary: Update service configuration
      operationId: putServiceConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConfig'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    delete:
      tags:
      - Application Settings
      summary: Delete service configuration
      operationId: deleteServiceConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
  /api/application-monitoring/settings/service/order:
    put:
      tags:
      - Application Settings
      summary: Order of service configuration
      operationId: orderServiceConfig
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
  /api/events/{eventId}:
    get:
      tags:
      - Events
      summary: Get Event
      operationId: getEvent
      parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/events:
    get:
      tags:
      - Events
      summary: Get alerts
      operationId: getEvents
      parameters:
      - name: windowSize
        in: query
        schema:
          type: integer
          format: int64
      - name: from
        in: query
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: excludeTriggeredBefore
        in: query
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/events/settings/alertingChannels:
    get:
      tags:
      - Event Settings
      summary: All alerting channels
      operationId: getAlertingChannels
      parameters:
      - name: ids
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbstractIntegration'
      security:
      - ApiKeyAuth:
        - CanConfigureIntegrations
  /api/events/settings/alertingChannels/{id}:
    get:
      tags:
      - Event Settings
      summary: Alerting channel
      operationId: getAlertingChannel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractIntegration'
      security:
      - ApiKeyAuth:
        - CanConfigureIntegrations
    put:
      tags:
      - Event Settings
      summary: Update alerting channel
      operationId: putAlertingChannel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractIntegration'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - CanConfigureIntegrations
    delete:
      tags:
      - Event Settings
      summary: Delete alerting channel
      operationId: deleteAlertingChannel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - CanConfigureIntegrations
  /api/events/settings/alertingChannels/infos:
    get:
      tags:
      - Event Settings
      summary: Overview over all alerting channels
      operationId: getAlertingChannelsOverview
      parameters:
      - name: ids
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationOverview'
      security:
      - ApiKeyAuth:
        - CanConfigureIntegrations
  /api/events/settings/alertingChannels/test:
    put:
      tags:
      - Event Settings
      summary: Test alerting channel
      operationId: sendTestAlerting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractIntegration'
        required: true
        x-example: alertingChannelTestCall
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - CanConfigureIntegrations
  /api/events/settings/alerts:
    get:
      tags:
      - Event Settings
      summary: All Alerting
      operationId: getAlerts
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidatedAlertingConfiguration'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/alerts/{id}:
    get:
      tags:
      - Event Settings
      summary: Alerting
      operationId: getAlert
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertingConfigurationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
    put:
      tags:
      - Event Settings
      summary: Update alerting
      operationId: putAlert
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertingConfiguration'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertingConfigurationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
    delete:
      tags:
      - Event Settings
      summary: Delete alerting
      operationId: deleteAlert
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/alerts/infos:
    get:
      tags:
      - Event Settings
      summary: All alerting configuration info
      operationId: getAlertingConfigurationInfos
      parameters:
      - name: integrationId
        in: query
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidatedAlertingChannelInputInfo'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/event-specifications/built-in:
    get:
      tags:
      - Event Settings
      summary: All built-in event specification
      operationId: getBuiltInEventSpecifications
      parameters:
      - name: ids
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuiltInEventSpecificationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/event-specifications/built-in/{eventSpecificationId}:
    get:
      tags:
      - Event Settings
      summary: Built-in event specifications
      operationId: getBuiltInEventSpecification
      parameters:
      - name: eventSpecificationId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuiltInEventSpecification'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
    delete:
      tags:
      - Event Settings
      summary: Delete built-in event specification
      operationId: deleteBuiltInEventSpecification
      parameters:
      - name: eventSpecificationId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/event-specifications/built-in/{eventSpecificationId}/enable:
    post:
      tags:
      - Event Settings
      summary: Enable built-in event specification
      operationId: enableBuiltInEventSpecification
      parameters:
      - name: eventSpecificationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuiltInEventSpecificationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/event-specifications/built-in/{eventSpecificationId}/disable:
    post:
      tags:
      - Event Settings
      summary: Disable built-in event specification
      operationId: disableBuiltInEventSpecification
      parameters:
      - name: eventSpecificationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuiltInEventSpecificationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/event-specifications/infos:
    get:
      tags:
      - Event Settings
      summary: Summary of all built-in and custom event specifications
      operationId: getEventSpecificationInfos
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSpecificationInfo'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
    post:
      tags:
      - Event Settings
      summary: All built-in and custom event specifications
      description: Summary of all built-in and custom event specifications by IDs
      operationId: getEventSpecificationInfosByIds
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSpecificationInfo'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/event-specifications/custom:
    get:
      tags:
      - Event Settings
      summary: All custom event specifications
      operationId: getCustomEventSpecifications
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEventSpecificationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/event-specifications/custom/{eventSpecificationId}:
    get:
      tags:
      - Event Settings
      summary: Custom event specification
      operationId: getCustomEventSpecification
      parameters:
      - name: eventSpecificationId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEventSpecificationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
    put:
      tags:
      - Event Settings
      summary: Create or Update custom event specification
      operationId: putCustomEventSpecification
      parameters:
      - name: eventSpecificationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEventSpecification'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEventSpecificationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
      x-description: putCustomEventSpecification
    delete:
      tags:
      - Event Settings
      summary: Delete custom event specification
      operationId: deleteCustomEventSpecification
      parameters:
      - name: eventSpecificationId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/event-specifications/custom/systemRules:
    get:
      tags:
      - Event Settings
      summary: All system rules for custom event specifications
      operationId: getSystemRules
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemRuleLabel'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/event-specifications/custom/{eventSpecificationId}/enable:
    post:
      tags:
      - Event Settings
      summary: Enable custom event specification
      operationId: enableCustomEventSpecification
      parameters:
      - name: eventSpecificationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEventSpecificationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/event-specifications/custom/{eventSpecificationId}/disable:
    post:
      tags:
      - Event Settings
      summary: Disable custom event specification
      operationId: disableCustomEventSpecification
      parameters:
      - name: eventSpecificationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEventSpecificationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/website-alert-configs:
    get:
      tags:
      - Event Settings
      summary: All Website Alert Configs
      description: Configs are sorted descending by their created date.
      operationId: findActiveWebsiteAlertConfigs
      parameters:
      - name: websiteId
        in: query
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebsiteAlertConfigWithMetadata'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
    post:
      tags:
      - Event Settings
      summary: Create Website Alert Config
      operationId: createWebsiteAlertConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsiteAlertConfig'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebsiteAlertConfigWithMetadata'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/website-alert-configs/{id}/versions:
    get:
      tags:
      - Event Settings
      summary: Get versions of Website Alert Config
      description: Find all versions of a Website Alert Config by ID. This will deliver
        deleted configs too. Configs are sorted descending by their created date.
      operationId: findWebsiteAlertConfigVersions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigVersion'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/website-alert-configs/{id}/enable:
    put:
      tags:
      - Event Settings
      summary: Enable Website Alert Config
      operationId: enableWebsiteAlertConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebsiteAlertConfigWithMetadata'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/website-alert-configs/{id}/disable:
    put:
      tags:
      - Event Settings
      summary: Disable Website Alert Config
      operationId: disableWebsiteAlertConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebsiteAlertConfigWithMetadata'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/events/settings/website-alert-configs/{id}:
    get:
      tags:
      - Event Settings
      summary: Get Website Alert Config
      description: Find a Website Alert Config by ID. This will deliver deleted configs
        too.
      operationId: findWebsiteAlertConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: validOn
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebsiteAlertConfigWithMetadata'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
    post:
      tags:
      - Event Settings
      summary: Update Website Alert Config
      operationId: updateWebsiteAlertConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsiteAlertConfig'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebsiteAlertConfigWithMetadata'
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
    delete:
      tags:
      - Event Settings
      summary: Delete Website Alert Config
      operationId: deleteWebsiteAlertConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - CanConfigureCustomAlerts
  /api/infrastructure-monitoring/catalog/plugins-with-custom-metrics:
    get:
      tags:
      - Infrastructure Catalog
      summary: Get all plugins with custom metrics catalog
      operationId: getInfrastructureCatalogPluginsWithCustomMetrics
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginResult'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getInfrastructureCatalogPluginsWithCustomMetrics
  /api/infrastructure-monitoring/catalog/plugins:
    get:
      tags:
      - Infrastructure Catalog
      summary: Get plugin catalog
      operationId: getInfrastructureCatalogPlugins
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginResult'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getInfrastructureCatalogPlugins
  /api/infrastructure-monitoring/catalog/metrics/{plugin}:
    get:
      tags:
      - Infrastructure Catalog
      summary: Get metric catalog
      operationId: getInfrastructureCatalogMetrics
      parameters:
      - name: plugin
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricInstance'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getInfrastructureCatalogMetrics
  /api/infrastructure-monitoring/catalog/search:
    get:
      tags:
      - Infrastructure Catalog
      summary: get search field catalog
      operationId: getInfrastructureCatalogSearchFields
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchFieldResult'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getInfrastructureCatalogSearchFields
  /api/infrastructure-monitoring/graph/views:
    get:
      tags:
      - Infrastructure Resources
      summary: Get view tree
      operationId: getInfrastructureViewTree
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreeNodeResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/infrastructure-monitoring/graph/related-hosts/{snapshotId}:
    get:
      tags:
      - Infrastructure Resources
      summary: Related hosts
      operationId: getRelatedHosts
      parameters:
      - name: snapshotId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - ApiKeyAuth:
        - Default
  /api/infrastructure-monitoring/metrics:
    post:
      tags:
      - Infrastructure Metrics
      summary: Get infrastructure metrics
      operationId: getInfrastructureMetrics
      parameters:
      - name: offline
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCombinedMetrics'
        x-payload: getInfrastructureMetrics
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureMetricResult'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getInfrastructureMetrics
  /api/infrastructure-monitoring/snapshots:
    get:
      tags:
      - Infrastructure Metrics
      summary: Search snapshots
      operationId: getSnapshots
      parameters:
      - name: query
        in: query
        schema:
          type: string
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: windowSize
        in: query
        schema:
          type: integer
          format: int64
      - name: size
        in: query
        schema:
          type: integer
          format: int32
      - name: plugin
        in: query
        schema:
          type: string
      - name: offline
        in: query
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotResult'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getSnapshots
  /api/infrastructure-monitoring/snapshots/{id}:
    get:
      tags:
      - Infrastructure Metrics
      summary: Get snapshot details
      operationId: getSnapshot
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: windowSize
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotItem'
      security:
      - ApiKeyAuth:
        - Default
  /api/infrastructure-monitoring/monitoring-state:
    get:
      tags:
      - Infrastructure Resources
      summary: Monitored host count
      operationId: getMonitoringState
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringState'
      security:
      - ApiKeyAuth:
        - Default
  /api/infrastructure-monitoring/software/versions:
    get:
      tags:
      - Infrastructure Resources
      summary: Get installed software
      description: "Retrieve information about the software you are running. This\
        \ includes runtime and package manager information.\n\nThe `name`, `version`,\
        \ `origin` and `type` parameters are optional filters that can be used to\
        \ reduce the result data set."
      operationId: softwareVersions
      parameters:
      - name: time
        in: query
        schema:
          type: integer
          format: int64
      - name: origin
        in: query
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SoftwareVersion'
      security:
      - ApiKeyAuth:
        - Default
  /api/instana/health:
    get:
      tags:
      - Health
      summary: Basic health traffic light
      operationId: getHealthState
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthState'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getHealthState
  /api/instana/version:
    get:
      tags:
      - Health
      summary: API version information
      operationId: getVersion
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanaVersionInfo'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getVersion
  /api/instana/usage/hosts/{month}/{year}:
    get:
      tags:
      - Usage
      summary: Host count month / year
      operationId: getHostsPerMonth
      parameters:
      - name: month
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsageResult'
      security:
      - ApiKeyAuth:
        - CanSeeUsageInformation
  /api/instana/usage/hosts/{day}/{month}/{year}:
    get:
      tags:
      - Usage
      summary: Host count day / month / year
      operationId: getHostsPerDay
      parameters:
      - name: day
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: month
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsageResult'
      security:
      - ApiKeyAuth:
        - CanSeeUsageInformation
  /api/instana/usage/api:
    get:
      tags:
      - Usage
      summary: API usage by customer
      operationId: getAllUsage
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsageResult'
      security:
      - ApiKeyAuth:
        - CanSeeUsageInformation
  /api/instana/usage/api/{month}/{year}:
    get:
      tags:
      - Usage
      summary: API usage month / year
      operationId: getUsagePerMonth
      parameters:
      - name: month
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsageResult'
      security:
      - ApiKeyAuth:
        - CanSeeUsageInformation
  /api/instana/usage/api/{day}/{month}/{year}:
    get:
      tags:
      - Usage
      summary: API usage day / month / year
      operationId: getUsagePerDay
      parameters:
      - name: day
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: month
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsageResult'
      security:
      - ApiKeyAuth:
        - CanSeeUsageInformation
  /api/releases:
    get:
      tags:
      - Releases
      summary: Get all releases
      operationId: getAllReleases
      parameters:
      - name: from
        in: query
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      - name: maxResults
        in: query
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReleaseWithMetadata'
      security:
      - ApiKeyAuth:
        - CanConfigureReleases
      x-description: getAllReleases
    post:
      tags:
      - Releases
      summary: Create release
      operationId: postRelease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseWithMetadata'
      security:
      - ApiKeyAuth:
        - CanConfigureReleases
      x-description: postRelease
  /api/releases/{releaseId}:
    get:
      tags:
      - Releases
      summary: Get release
      operationId: getRelease
      parameters:
      - name: releaseId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseWithMetadata'
      security:
      - ApiKeyAuth:
        - CanConfigureReleases
      x-description: getRelease
    put:
      tags:
      - Releases
      summary: Update release
      operationId: putRelease
      parameters:
      - name: releaseId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseWithMetadata'
      security:
      - ApiKeyAuth:
        - CanConfigureReleases
      x-description: putRelease
    delete:
      tags:
      - Releases
      summary: Delete release
      operationId: deleteRelease
      parameters:
      - name: releaseId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - CanConfigureReleases
      x-description: deleteRelease
  /api/settings/api-tokens/{apiTokenId}:
    get:
      tags:
      - API Token
      summary: API token
      operationId: getApiToken
      parameters:
      - name: apiTokenId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiToken'
      security:
      - ApiKeyAuth:
        - ConfigureApiTokens
    put:
      tags:
      - API Token
      summary: Create or update an API token
      operationId: putApiToken
      parameters:
      - name: apiTokenId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiToken'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiToken'
        "400":
          description: If token already exist on other environment.
      security:
      - ApiKeyAuth:
        - ConfigureApiTokens
    delete:
      tags:
      - API Token
      summary: Delete API token
      operationId: deleteApiToken
      parameters:
      - name: apiTokenId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
      security:
      - ApiKeyAuth:
        - ConfigureApiTokens
  /api/settings/api-tokens:
    get:
      tags:
      - API Token
      summary: All API tokens
      operationId: getApiTokens
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiToken'
      security:
      - ApiKeyAuth:
        - ConfigureApiTokens
    post:
      tags:
      - API Token
      summary: Create an API token
      operationId: postApiToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiToken'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiToken'
        "400":
          description: If token already exist on other environment.
      security:
      - ApiKeyAuth:
        - ConfigureApiTokens
  /api/settings/auditlog:
    get:
      tags:
      - Audit Log
      summary: Audit log
      operationId: getAuditLogs
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: query
        in: query
        schema:
          type: string
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogResponse'
      security:
      - ApiKeyAuth:
        - ViewAuditLog
  /api/settings/groups:
    get:
      tags:
      - Groups
      summary: All groups
      operationId: getGroups
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RbacGroup'
      security:
      - ApiKeyAuth:
        - ConfigureGroups
    put:
      tags:
      - Groups
      summary: Create groups
      operationId: updateGroups
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RbacGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RbacGroup'
      security:
      - ApiKeyAuth:
        - ConfigureGroups
      x-description: updateGroups
  /api/settings/groups/user/{email}:
    get:
      tags:
      - Groups
      summary: Get groups
      operationId: getGroupsByUser
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RbacGroup'
      security:
      - ApiKeyAuth:
        - ConfigureGroups
      x-description: getGroups
  /api/settings/group/{id}:
    get:
      tags:
      - Groups
      summary: Get group
      operationId: getGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacGroup'
      security:
      - ApiKeyAuth:
        - ConfigureGroups
    put:
      tags:
      - Groups
      summary: Update group
      operationId: updateGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RbacGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacGroup'
      security:
      - ApiKeyAuth:
        - ConfigureGroups
      x-description: updateGroup
    delete:
      tags:
      - Groups
      summary: Delete groups
      operationId: deleteGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureGroups
      x-description: deleteGroups
  /api/settings/group:
    post:
      tags:
      - Groups
      summary: Create group
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RbacGroup'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacGroup'
      security:
      - ApiKeyAuth:
        - ConfigureGroups
      x-description: createGroup
  /api/settings/maintenance/{id}:
    get:
      tags:
      - Maintenance Configuration
      summary: Maintenance configuration
      operationId: getMaintenanceConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceConfigWithLastUpdated'
      security:
      - ApiKeyAuth:
        - ConfigureCustomAlerts
    put:
      tags:
      - Maintenance Configuration
      summary: Create or update maintenance configuration
      operationId: putMaintenanceConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceConfig'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceConfigWithLastUpdated'
        "200":
          description: "Maintenance config has been created or updated, and successfully\
            \ scheduled immediately if needed"
        "202":
          description: "Maintenance config has been created or updated, but could\
            \ not to be scheduled immediately. It will therefore be scheduled during\
            \ the next auto-refresh with a delay of up to 4 minutes."
        "400":
          description: Invalid JSON or mismatching IDs have been provided
      security:
      - ApiKeyAuth:
        - ConfigureCustomAlerts
    delete:
      tags:
      - Maintenance Configuration
      summary: Delete maintenance configuration
      operationId: deleteMaintenanceConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureCustomAlerts
  /api/settings/maintenance:
    get:
      tags:
      - Maintenance Configuration
      summary: All maintenance configurations
      operationId: getMaintenanceConfigs
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidatedMaintenanceConfigWithStatus'
      security:
      - ApiKeyAuth:
        - ConfigureCustomAlerts
  /api/settings/roles/{roleId}:
    get:
      tags:
      - User
      summary: Role
      operationId: getRole
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      security:
      - ApiKeyAuth:
        - ConfigureRoles
    put:
      tags:
      - User
      summary: Create or update role
      operationId: putRole
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      security:
      - ApiKeyAuth:
        - ConfigureRoles
    delete:
      tags:
      - User
      summary: Delete role
      operationId: deleteRole
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureRoles
  /api/settings/roles:
    get:
      tags:
      - User
      summary: All roles
      operationId: getRoles
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      security:
      - ApiKeyAuth:
        - ConfigureRoles
  /api/settings/session:
    get:
      tags:
      - Session Settings
      summary: Session settings
      operationId: getSessionSettings
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionSettings'
      security:
      - ApiKeyAuth:
        - ConfigureSessionSettings
    put:
      tags:
      - Session Settings
      summary: Configure session settings
      operationId: setSessionSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionSettings'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionSettings'
      security:
      - ApiKeyAuth:
        - ConfigureSessionSettings
    delete:
      tags:
      - Session Settings
      summary: Delete session settings
      operationId: deleteSessionSettings
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureSessionSettings
  /api/settings/synthetic-calls:
    get:
      tags:
      - Synthetic Calls
      summary: Synthetic call configurations
      operationId: getSyntheticCalls
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticCallWithDefaultsConfig'
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    put:
      tags:
      - Synthetic Calls
      summary: Update synthetic call configurations
      operationId: updateSyntheticCall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticCallConfig'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
    delete:
      tags:
      - Synthetic Calls
      summary: Delete synthetic call configurations
      operationId: deleteSyntheticCall
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureServiceMapping
  /api/settings/users:
    get:
      tags:
      - User
      summary: All users (without invitations)
      operationId: getUsers
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResult'
      security:
      - ApiKeyAuth:
        - ConfigureUsers
  /api/settings/users/invitations:
    get:
      tags:
      - User
      summary: All pending invitations
      operationId: getInvitations
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResult'
      security:
      - ApiKeyAuth:
        - ConfigureUsers
    post:
      tags:
      - User
      summary: Send user invitation
      operationId: sendInvitation
      parameters:
      - name: email
        in: query
        schema:
          type: array
          items:
            type: string
      - name: roleId
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureUsers
    delete:
      tags:
      - User
      summary: Revoke pending invitation
      operationId: revokePendingInvitations
      parameters:
      - name: email
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureUsers
  /api/settings/users/overview:
    get:
      tags:
      - User
      summary: All users (incl. invitations)
      operationId: getUsersIncludingInvitations
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResult'
      security:
      - ApiKeyAuth:
        - ConfigureUsers
  /api/settings/users/{userId}:
    delete:
      tags:
      - User
      summary: Remove user from tenant
      operationId: removeUserFromTenant
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureUsers
  /api/settings/users/{userId}/role:
    put:
      tags:
      - User
      summary: Add user to role
      operationId: setRole
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: roleId
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - ConfigureUsers
  /api/sli/report/{sliId}:
    get:
      tags:
      - SLI Report
      summary: Generate SLI report
      operationId: getSli
      parameters:
      - name: sliId
        in: path
        required: true
        schema:
          type: string
      - name: slo
        in: query
        schema:
          type: number
          format: double
      - name: from
        in: query
        schema:
          type: integer
          format: int64
      - name: to
        in: query
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SliReport'
      security:
      - ApiKeyAuth:
        - canConfigureServiceLevelIndicators
  /api/settings/sli/{id}:
    get:
      tags:
      - SLI Settings
      summary: Get SLI Config
      operationId: getSli_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SliConfigurationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - canConfigureServiceLevelIndicators
    put:
      tags:
      - SLI Settings
      summary: Update SLI Config
      operationId: putSli
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SliConfigurationWithLastUpdated'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SliConfigurationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - canConfigureServiceLevelIndicators
    delete:
      tags:
      - SLI Settings
      summary: Delete SLI Config
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - ApiKeyAuth:
        - canConfigureServiceLevelIndicators
  /api/settings/sli:
    get:
      tags:
      - SLI Settings
      summary: Get All SLI Configs
      operationId: getSli_2
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SliConfigurationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - canConfigureServiceLevelIndicators
    post:
      tags:
      - SLI Settings
      summary: Create SLI Config
      operationId: createSli
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SliConfiguration'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SliConfigurationWithLastUpdated'
      security:
      - ApiKeyAuth:
        - canConfigureServiceLevelIndicators
  /api/website-monitoring/analyze/beacon-groups:
    post:
      tags:
      - Website Analyze
      summary: Get grouped beacon metrics
      operationId: getBeaconGroups
      parameters:
      - name: fillTimeSeries
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWebsiteBeaconGroups'
        x-payload: getBeaconGroups
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconGroupsResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/website-monitoring/analyze/beacons:
    post:
      tags:
      - Website Analyze
      summary: Get all beacons
      operationId: getBeacons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWebsiteBeacons'
        x-payload: getWebsiteBeacons
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeaconResult'
      security:
      - ApiKeyAuth:
        - Default
  /api/website-monitoring/catalog/tags:
    get:
      tags:
      - Website Catalog
      summary: Filter tag catalog
      operationId: getWebsiteCatalogTags
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getWebsiteCatalogTags
  /api/website-monitoring/catalog/metrics:
    get:
      tags:
      - Website Catalog
      summary: Metric catalog
      operationId: getWebsiteCatalogMetrics
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebsiteMonitoringMetricDescription'
      security:
      - ApiKeyAuth:
        - Default
      x-description: getWebsiteCatalogMetrics
  /api/website-monitoring/config:
    get:
      tags:
      - Website Configuration
      summary: Get configured websites
      operationId: getWebsites
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Website'
    post:
      tags:
      - Website Configuration
      summary: Configure new website
      operationId: post
      parameters:
      - name: name
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Website successfully configured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Website'
        "400":
          description: Missing name query parameter or name already used for a configured
            website
      security:
      - ApiKeyAuth:
        - ConfigureEumApplications
  /api/website-monitoring/config/{websiteId}:
    get:
      tags:
      - Website Configuration
      summary: Get configured website
      operationId: get
      parameters:
      - name: websiteId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Website'
    put:
      tags:
      - Website Configuration
      summary: Rename website
      operationId: rename
      parameters:
      - name: websiteId
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        "200":
          description: Website successfully renamed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Website'
        "400":
          description: Missing name query parameter or name already used for a configured
            website
      security:
      - ApiKeyAuth:
        - ConfigureEumApplications
    delete:
      tags:
      - Website Configuration
      summary: Remove website
      operationId: delete_1
      parameters:
      - name: websiteId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Website successfully removed
      security:
      - ApiKeyAuth:
        - ConfigureEumApplications
  /api/website-monitoring/page-load:
    get:
      tags:
      - Website Metrics
      summary: Get page load
      operationId: getPageLoad
      parameters:
      - name: id
        in: path
        required: true
        style: matrix
        schema:
          type: string
      - name: timestamp
        in: path
        required: true
        style: matrix
        schema:
          type: integer
          format: int64
      responses:
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebsiteMonitoringBeacon'
        "400":
          description: Missing page id
        "404":
          description: Website not found
      security:
      - ApiKeyAuth:
        - Default
  /api/website-monitoring/metrics:
    post:
      tags:
      - Website Metrics
      summary: Get beacon metrics
      operationId: getBeaconMetrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWebsiteMetrics'
        x-payload: getWebsiteMetricsQuery
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsiteMetricResult'
      security:
      - ApiKeyAuth:
        - Default
components:
  schemas:
    AgentConfigurationUpdate:
      type: object
      properties:
        remoteName:
          maxLength: 256
          minLength: 0
          type: string
        remoteUri:
          maxLength: 65536
          minLength: 0
          type: string
        remoteBranch:
          maxLength: 256
          minLength: 0
          type: string
    SnapshotItem:
      type: object
      properties:
        snapshotId:
          type: string
        plugin:
          type: string
        from:
          type: integer
          format: int64
        to:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
        label:
          type: string
        host:
          type: string
    SnapshotResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotItem'
    Endpoint:
      required:
      - id
      - label
      - serviceId
      - technologies
      - type
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        type:
          type: string
          enum:
          - UNDEFINED
          - RPC
          - EVENT
          - GRAPHQL
          - BATCH
          - SHELL
          - HTTP
          - SDK
          - INTERNAL
          - DATABASE
          - MESSAGING
          - PAGE
          - PAGE_RESOURCE
        serviceId:
          type: string
        technologies:
          uniqueItems: true
          type: array
          items:
            type: string
        isSynthetic:
          type: boolean
          writeOnly: true
        syntheticType:
          type: string
          enum:
          - NON_SYNTHETIC
          - SYNTHETIC
          - MIXED
        synthetic:
          type: boolean
        entityType:
          type: string
          enum:
          - APPLICATION
          - SERVICE
          - ENDPOINT
    IngestionOffsetCursor:
      type: object
      properties:
        ingestionTime:
          minimum: 0
          type: integer
          format: int64
        offset:
          minimum: 0
          type: integer
          format: int32
    Service:
      required:
      - id
      - label
      - technologies
      - types
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        types:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - UNDEFINED
            - RPC
            - EVENT
            - GRAPHQL
            - BATCH
            - SHELL
            - HTTP
            - SDK
            - INTERNAL
            - DATABASE
            - MESSAGING
            - PAGE
            - PAGE_RESOURCE
        technologies:
          uniqueItems: true
          type: array
          items:
            type: string
        entityType:
          type: string
          enum:
          - APPLICATION
          - SERVICE
          - ENDPOINT
    Trace:
      required:
      - id
      - label
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        startTime:
          minimum: 1
          type: integer
          format: int64
        duration:
          minimum: 0
          type: integer
          format: int64
        erroneous:
          type: boolean
        service:
          $ref: '#/components/schemas/Service'
        endpoint:
          $ref: '#/components/schemas/Endpoint'
    TraceItem:
      required:
      - cursor
      - trace
      type: object
      properties:
        trace:
          $ref: '#/components/schemas/Trace'
        cursor:
          $ref: '#/components/schemas/IngestionOffsetCursor'
    TraceResult:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TraceItem'
        canLoadMore:
          type: boolean
        totalHits:
          minimum: 0
          type: integer
          format: int64
        totalRepresentedItemCount:
          minimum: 0
          type: integer
          format: int64
    CursorPagination:
      type: object
      properties:
        retrievalSize:
          maximum: 200
          minimum: 1
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        ingestionTime:
          type: integer
          format: int64
    GetTraces:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/CursorPagination'
        timeFrame:
          $ref: '#/components/schemas/TimeFrame'
        tagFilters:
          maxItems: 32
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/TagFilter'
    TagFilter:
      required:
      - name
      - operator
      - value
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        operator:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - LESS_THAN
          - LESS_OR_EQUAL_THAN
          - GREATER_THAN
          - GREATER_OR_EQUAL_THAN
          - NOT_EMPTY
          - NOT_EQUAL
          - NOT_CONTAIN
          - IS_EMPTY
          - NOT_BLANK
          - IS_BLANK
          - STARTS_WITH
          - ENDS_WITH
          - NOT_STARTS_WITH
          - NOT_ENDS_WITH
        entity:
          type: string
          enum:
          - NOT_APPLICABLE
          - DESTINATION
          - SOURCE
    TimeFrame:
      type: object
      properties:
        windowSize:
          maximum: 2678400000
          minimum: 0
          type: integer
          format: int64
        to:
          type: integer
          format: int64
    TraceGroupsItem:
      required:
      - cursor
      - metrics
      - name
      type: object
      properties:
        name:
          type: string
        timestamp:
          minimum: 0
          type: integer
          format: int64
        cursor:
          $ref: '#/components/schemas/IngestionOffsetCursor'
        metrics:
          type: object
          additionalProperties:
            type: array
            items:
              type: array
              items:
                type: number
    TraceGroupsResult:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TraceGroupsItem'
        canLoadMore:
          type: boolean
        totalHits:
          minimum: 0
          type: integer
          format: int64
        totalRepresentedItemCount:
          minimum: 0
          type: integer
          format: int64
    GetTraceGroups:
      required:
      - group
      - metrics
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/CursorPagination'
        order:
          $ref: '#/components/schemas/Order'
        timeFrame:
          $ref: '#/components/schemas/TimeFrame'
        group:
          $ref: '#/components/schemas/Group'
        tagFilters:
          maxItems: 32
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/TagFilter'
        metrics:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/MetricConfig'
    Group:
      required:
      - groupbyTag
      - groupbyTagEntity
      type: object
      properties:
        groupbyTag:
          maxLength: 256
          minLength: 0
          type: string
        groupbyTagSecondLevelKey:
          maxLength: 256
          minLength: 0
          type: string
        groupbyTagEntity:
          type: string
          enum:
          - NOT_APPLICABLE
          - DESTINATION
          - SOURCE
    MetricConfig:
      required:
      - aggregation
      - metric
      type: object
      properties:
        metric:
          type: string
        granularity:
          type: integer
          format: int32
        aggregation:
          type: string
          enum:
          - SUM
          - MEAN
          - MAX
          - MIN
          - P25
          - P50
          - P75
          - P90
          - P95
          - P98
          - P99
          - DISTINCT_COUNT
    Order:
      required:
      - by
      - direction
      type: object
      properties:
        by:
          type: string
        direction:
          type: string
          enum:
          - ASC
          - DESC
    CallGroupsItem:
      required:
      - cursor
      - metrics
      - name
      type: object
      properties:
        name:
          type: string
        timestamp:
          minimum: 0
          type: integer
          format: int64
        cursor:
          $ref: '#/components/schemas/IngestionOffsetCursor'
        metrics:
          type: object
          additionalProperties:
            type: array
            items:
              type: array
              items:
                type: number
    CallGroupsResult:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CallGroupsItem'
        canLoadMore:
          type: boolean
        totalHits:
          minimum: 0
          type: integer
          format: int64
        totalRepresentedItemCount:
          minimum: 0
          type: integer
          format: int64
    GetCallGroups:
      required:
      - group
      - metrics
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/CursorPagination'
        order:
          $ref: '#/components/schemas/Order'
        timeFrame:
          $ref: '#/components/schemas/TimeFrame'
        group:
          $ref: '#/components/schemas/Group'
        tagFilters:
          maxItems: 10
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/TagFilter'
        metrics:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/MetricConfig'
    Application:
      required:
      - boundaryScope
      - id
      - label
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        boundaryScope:
          type: string
        entityType:
          type: string
          enum:
          - APPLICATION
          - SERVICE
          - ENDPOINT
    CloudfoundryPhysicalContext:
      type: object
      properties:
        application:
          $ref: '#/components/schemas/SnapshotPreview'
        space:
          $ref: '#/components/schemas/SnapshotPreview'
        organization:
          $ref: '#/components/schemas/SnapshotPreview'
        cfInstanceIndex:
          type: string
    FullTrace:
      required:
      - id
      - rootSpan
      type: object
      properties:
        id:
          type: string
        totalErrorCount:
          minimum: 0
          type: integer
          format: int32
        rootSpan:
          $ref: '#/components/schemas/Span'
    KubernetesPhysicalContext:
      type: object
      properties:
        pod:
          $ref: '#/components/schemas/SnapshotPreview'
        namespace:
          $ref: '#/components/schemas/SnapshotPreview'
        node:
          $ref: '#/components/schemas/SnapshotPreview'
        cluster:
          $ref: '#/components/schemas/SnapshotPreview'
    PhysicalContext:
      type: object
      properties:
        process:
          $ref: '#/components/schemas/SnapshotPreview'
        container:
          $ref: '#/components/schemas/SnapshotPreview'
        host:
          $ref: '#/components/schemas/SnapshotPreview'
        cluster:
          $ref: '#/components/schemas/SnapshotPreview'
        cloudfoundry:
          $ref: '#/components/schemas/CloudfoundryPhysicalContext'
        kubernetes:
          $ref: '#/components/schemas/KubernetesPhysicalContext'
    SnapshotPreview:
      required:
      - id
      type: object
      properties:
        id:
          type: string
        time:
          minimum: 1
          type: integer
          format: int64
        label:
          type: string
        plugin:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
    Span:
      required:
      - callId
      - childSpans
      - data
      - id
      - kind
      - label
      - name
      - stackTrace
      type: object
      properties:
        id:
          type: string
        parentId:
          type: string
        callId:
          type: string
        name:
          type: string
        label:
          maxLength: 128
          minLength: 0
          type: string
        start:
          minimum: 1
          type: integer
          format: int64
        duration:
          minimum: 0
          type: integer
          format: int64
        calculatedSelfTime:
          minimum: 0
          type: integer
          format: int64
        errorCount:
          minimum: 0
          type: integer
          format: int32
        batchSize:
          minimum: 0
          type: integer
          format: int32
        batchSelfTime:
          type: integer
          format: int64
        kind:
          type: string
          enum:
          - UNKNOWN
          - ENTRY
          - EXIT
          - INTERMEDIATE
        isSynthetic:
          type: boolean
        data:
          type: object
          additionalProperties:
            type: object
        source:
          $ref: '#/components/schemas/SpanRelation'
        destination:
          $ref: '#/components/schemas/SpanRelation'
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/StackTraceItem'
        childSpans:
          type: array
          items:
            $ref: '#/components/schemas/Span'
    SpanRelation:
      required:
      - applications
      type: object
      properties:
        applications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Application'
        service:
          $ref: '#/components/schemas/Service'
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        physicalContext:
          $ref: '#/components/schemas/PhysicalContext'
    StackTraceItem:
      type: object
      properties:
        file:
          type: string
        method:
          type: string
        line:
          type: string
    ApplicationItem:
      required:
      - application
      - metrics
      type: object
      properties:
        application:
          $ref: '#/components/schemas/Application'
        metrics:
          type: object
          additionalProperties:
            type: array
            items:
              type: array
              items:
                type: number
    ApplicationMetricResult:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationItem'
        page:
          minimum: 1
          type: integer
          format: int32
        pageSize:
          minimum: 1
          type: integer
          format: int32
        totalHits:
          minimum: 0
          type: integer
          format: int64
    AppDataMetricConfiguration:
      required:
      - aggregation
      - metric
      type: object
      properties:
        metric:
          type: string
        granularity:
          type: integer
          format: int32
        aggregation:
          type: string
          enum:
          - SUM
          - MEAN
          - MAX
          - MIN
          - P25
          - P50
          - P75
          - P90
          - P95
          - P98
          - P99
          - DISTINCT_COUNT
    GetApplications:
      required:
      - metrics
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        order:
          $ref: '#/components/schemas/Order'
        timeFrame:
          $ref: '#/components/schemas/TimeFrame'
        metrics:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AppDataMetricConfiguration'
        nameFilter:
          maxLength: 256
          minLength: 0
          type: string
        applicationId:
          maxLength: 64
          minLength: 0
          type: string
        serviceId:
          maxLength: 64
          minLength: 0
          type: string
        endpointId:
          maxLength: 64
          minLength: 0
          type: string
        endpointTypes:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
            enum:
            - UNDEFINED
            - RPC
            - EVENT
            - GRAPHQL
            - BATCH
            - SHELL
            - HTTP
            - SDK
            - INTERNAL
            - DATABASE
            - MESSAGING
            - PAGE
            - PAGE_RESOURCE
        technologies:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
        applicationBoundaryScope:
          type: string
          enum:
          - ALL
          - INBOUND
    Pagination:
      type: object
      properties:
        page:
          minimum: 1
          type: integer
          format: int32
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          format: int32
    ServiceItem:
      required:
      - metrics
      - service
      type: object
      properties:
        service:
          $ref: '#/components/schemas/Service'
        metrics:
          type: object
          additionalProperties:
            type: array
            items:
              type: array
              items:
                type: number
    ServiceMetricResult:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ServiceItem'
        page:
          minimum: 1
          type: integer
          format: int32
        pageSize:
          minimum: 1
          type: integer
          format: int32
        totalHits:
          minimum: 0
          type: integer
          format: int64
    GetServices:
      required:
      - metrics
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        order:
          $ref: '#/components/schemas/Order'
        timeFrame:
          $ref: '#/components/schemas/TimeFrame'
        metrics:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AppDataMetricConfiguration'
        nameFilter:
          maxLength: 256
          minLength: 0
          type: string
        applicationId:
          maxLength: 64
          minLength: 0
          type: string
        serviceId:
          maxLength: 64
          minLength: 0
          type: string
        technologies:
          maxItems: 20
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        contextScope:
          type: string
          enum:
          - NONE
          - UPSTREAM
          - DOWNSTREAM
        applicationBoundaryScope:
          type: string
          enum:
          - ALL
          - INBOUND
    EndpointItem:
      required:
      - endpoint
      - metrics
      type: object
      properties:
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        metrics:
          type: object
          additionalProperties:
            type: array
            items:
              type: array
              items:
                type: number
    EndpointMetricResult:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/EndpointItem'
        page:
          minimum: 1
          type: integer
          format: int32
        pageSize:
          minimum: 1
          type: integer
          format: int32
        totalHits:
          minimum: 0
          type: integer
          format: int64
    GetEndpoints:
      required:
      - metrics
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        order:
          $ref: '#/components/schemas/Order'
        timeFrame:
          $ref: '#/components/schemas/TimeFrame'
        metrics:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AppDataMetricConfiguration'
        nameFilter:
          maxLength: 256
          minLength: 0
          type: string
        applicationId:
          maxLength: 64
          minLength: 0
          type: string
        serviceId:
          maxLength: 64
          minLength: 0
          type: string
        endpointId:
          maxLength: 64
          minLength: 0
          type: string
        endpointTypes:
          maxItems: 8
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - UNDEFINED
            - RPC
            - EVENT
            - GRAPHQL
            - BATCH
            - SHELL
            - HTTP
            - SDK
            - INTERNAL
            - DATABASE
            - MESSAGING
            - PAGE
            - PAGE_RESOURCE
        excludeSynthetic:
          type: boolean
        applicationBoundaryScope:
          type: string
          enum:
          - ALL
          - INBOUND
    ApplicationResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Application'
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalHits:
          type: integer
          format: int32
    EndpointResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalHits:
          type: integer
          format: int32
    ServiceResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalHits:
          type: integer
          format: int32
    MetricDescription:
      type: object
      properties:
        metricId:
          type: string
        label:
          type: string
        formatter:
          type: string
        description:
          type: string
        aggregations:
          uniqueItems: true
          type: array
          items:
            type: string
    Tag:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - STRING
          - NUMBER
          - BOOLEAN
          - KEY_VALUE_PAIR
        category:
          type: string
        canApplyToSource:
          type: boolean
        canApplyToDestination:
          type: boolean
        sourceValueAvailableFrom:
          type: integer
          format: int64
    TagCatalog:
      type: object
      properties:
        tagTree:
          type: array
          items:
            $ref: '#/components/schemas/TagTreeLevel'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    TagTreeLevel:
      required:
      - children
      - label
      - searchable
      type: object
      properties:
        label:
          type: string
        description:
          type: string
        icon:
          type: string
        searchable:
          type: boolean
        children:
          type: array
          items:
            $ref: '#/components/schemas/TagTreeNode'
        type:
          type: string
    TagTreeNode:
      type: object
      properties:
        type:
          type: string
        icon:
          type: string
        label:
          type: string
      discriminator:
        propertyName: type
        mapping:
          LEVEL: '#/components/schemas/TagTreeLevel'
          TAG: '#/components/schemas/TagTreeTag'
    TagTreeTag:
      required:
      - allowFiltering
      - allowGrouping
      - description
      - label
      - tagName
      type: object
      allOf:
      - $ref: '#/components/schemas/TagTreeNode'
      - type: object
        properties:
          description:
            type: string
          tagName:
            type: string
          allowFiltering:
            type: boolean
          allowGrouping:
            type: boolean
    ApplicationConfig:
      required:
      - boundaryScope
      - id
      - label
      - matchSpecification
      - scope
      type: object
      properties:
        id:
          maxLength: 128
          minLength: 1
          type: string
        label:
          maxLength: 128
          minLength: 1
          type: string
        matchSpecification:
          $ref: '#/components/schemas/MatchExpressionDTO'
        scope:
          type: string
          enum:
          - INCLUDE_NO_DOWNSTREAM
          - INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING
          - INCLUDE_ALL_DOWNSTREAM
        boundaryScope:
          type: string
          enum:
          - ALL
          - INBOUND
          - DEFAULT
    BinaryOperatorDTO:
      required:
      - conjunction
      - left
      - right
      type: object
      allOf:
      - $ref: '#/components/schemas/MatchExpressionDTO'
      - type: object
        properties:
          left:
            $ref: '#/components/schemas/MatchExpressionDTO'
          right:
            $ref: '#/components/schemas/MatchExpressionDTO'
          conjunction:
            type: string
            enum:
            - AND
            - OR
    MatchExpressionDTO:
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          LEAF: '#/components/schemas/TagMatcherDTO'
          BINARY_OP: '#/components/schemas/BinaryOperatorDTO'
    TagMatcherDTO:
      required:
      - entity
      - key
      - operator
      type: object
      allOf:
      - $ref: '#/components/schemas/MatchExpressionDTO'
      - type: object
        properties:
          key:
            type: string
          entity:
            type: string
            enum:
            - NOT_APPLICABLE
            - DESTINATION
            - SOURCE
          value:
            type: string
          operator:
            type: string
            enum:
            - EQUALS
            - NOT_EQUAL
            - CONTAINS
            - NOT_CONTAIN
            - IS_EMPTY
            - NOT_EMPTY
            - IS_BLANK
            - NOT_BLANK
            - STARTS_WITH
            - ENDS_WITH
            - NOT_STARTS_WITH
            - NOT_ENDS_WITH
            - GREATER_OR_EQUAL_THAN
            - LESS_OR_EQUAL_THAN
            - LESS_THAN
            - GREATER_THAN
    NewApplicationConfig:
      required:
      - boundaryScope
      - label
      - matchSpecification
      - scope
      type: object
      properties:
        label:
          maxLength: 128
          minLength: 1
          type: string
        matchSpecification:
          $ref: '#/components/schemas/MatchExpressionDTO'
        scope:
          type: string
          enum:
          - INCLUDE_NO_DOWNSTREAM
          - INCLUDE_IMMEDIATE_DOWNSTREAM_DATABASE_AND_MESSAGING
          - INCLUDE_ALL_DOWNSTREAM
        boundaryScope:
          type: string
          enum:
          - ALL
          - INBOUND
          - DEFAULT
    FixedHttpPathSegmentMatchingRule:
      required:
      - name
      - type
      type: object
      allOf:
      - $ref: '#/components/schemas/HttpPathSegmentMatchingRule'
      - type: object
        properties:
          name:
            type: string
    HttpEndpointConfig:
      required:
      - rules
      - serviceId
      type: object
      properties:
        serviceId:
          type: string
        endpointNameByFirstPathSegmentRuleEnabled:
          type: boolean
        endpointNameByCollectedPathTemplateRuleEnabled:
          type: boolean
        rules:
          maxItems: 500
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/HttpEndpointRule'
    HttpEndpointRule:
      required:
      - pathSegments
      type: object
      properties:
        enabled:
          type: boolean
        pathSegments:
          maxItems: 16
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/HttpPathSegmentMatchingRule'
        testCases:
          maxItems: 32
          minItems: 0
          type: array
          items:
            type: string
    HttpPathSegmentMatchingRule:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - UNSUPPORTED
          - FIXED
          - PARAMETER
          - MATCH_ALL
      discriminator:
        propertyName: type
        mapping:
          UNSUPPORTED: '#/components/schemas/UnsupportedHttpPathSegmentMatchingRule'
          MATCH_ALL: '#/components/schemas/MatchAllHttpPathSegmentMatchingRule'
          PARAMETER: '#/components/schemas/PathParameterHttpPathSegmentMatchingRule'
          FIXED: '#/components/schemas/FixedHttpPathSegmentMatchingRule'
    MatchAllHttpPathSegmentMatchingRule:
      required:
      - type
      type: object
      allOf:
      - $ref: '#/components/schemas/HttpPathSegmentMatchingRule'
    PathParameterHttpPathSegmentMatchingRule:
      required:
      - name
      - type
      type: object
      allOf:
      - $ref: '#/components/schemas/HttpPathSegmentMatchingRule'
      - type: object
        properties:
          name:
            type: string
    UnsupportedHttpPathSegmentMatchingRule:
      required:
      - type
      type: object
      allOf:
      - $ref: '#/components/schemas/HttpPathSegmentMatchingRule'
      - type: object
        properties:
          unsupportedType:
            type: string
    ServiceConfig:
      required:
      - enabled
      - id
      - label
      - matchSpecification
      - name
      type: object
      properties:
        id:
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
        comment:
          maxLength: 2048
          minLength: 0
          type: string
        label:
          type: string
        enabled:
          type: boolean
        matchSpecification:
          maxItems: 20
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ServiceMatchingRule'
    ServiceMatchingRule:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    EventResult:
      type: object
      properties:
        eventId:
          type: string
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        triggeringTime:
          type: integer
          format: int64
        type:
          type: string
        state:
          type: string
        problem:
          type: string
        fixSuggestion:
          type: string
        severity:
          type: integer
          format: int32
        snapshotId:
          type: string
        metrics:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        recentEvents:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    AbstractIntegration:
      required:
      - id
      - kind
      - name
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
        name:
          type: string
      discriminator:
        propertyName: kind
        mapping:
          EMAIL: '#/components/schemas/EmailIntegration'
          SLACK: '#/components/schemas/SlackIntegration'
          SPLUNK: '#/components/schemas/SplunkIntegration'
          PAGER_DUTY: '#/components/schemas/PagerdutyIntegration'
          VICTOR_OPS: '#/components/schemas/VictorOpsIntegration'
          OPS_GENIE: '#/components/schemas/OpsgenieIntegration'
          WEB_HOOK: '#/components/schemas/WebhookIntegration'
          OFFICE_365: '#/components/schemas/Office365Integration'
          GOOGLE_CHAT: '#/components/schemas/GoogleChatIntegration'
          PROMETHEUS_WEBHOOK: '#/components/schemas/PrometheusWebhookIntegration'
          WEBEX_TEAMS_WEBHOOK: '#/components/schemas/WebexTeamsWebhookIntegration'
    EmailIntegration:
      required:
      - emails
      - id
      - kind
      - name
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          emails:
            type: array
            items:
              type: string
    GoogleChatIntegration:
      required:
      - id
      - kind
      - name
      - webhookUrl
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          webhookUrl:
            type: string
    Office365Integration:
      required:
      - id
      - kind
      - name
      - webhookUrl
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          webhookUrl:
            type: string
    OpsgenieIntegration:
      required:
      - apiKey
      - id
      - kind
      - name
      - region
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          apiKey:
            type: string
          tags:
            type: string
          region:
            type: string
            enum:
            - US
            - EU
          alias:
            type: string
    PagerdutyIntegration:
      required:
      - id
      - kind
      - name
      - serviceIntegrationKey
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          serviceIntegrationKey:
            type: string
    PrometheusWebhookIntegration:
      required:
      - id
      - kind
      - name
      - webhookUrl
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          webhookUrl:
            type: string
          receiver:
            type: string
    SlackIntegration:
      required:
      - channel
      - iconUrl
      - id
      - kind
      - name
      - webhookUrl
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          webhookUrl:
            type: string
          iconUrl:
            type: string
          channel:
            type: string
    SplunkIntegration:
      required:
      - id
      - kind
      - name
      - token
      - url
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          url:
            type: string
          token:
            type: string
    VictorOpsIntegration:
      required:
      - apiKey
      - id
      - kind
      - name
      - routingKey
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          apiKey:
            type: string
          routingKey:
            type: string
    WebexTeamsWebhookIntegration:
      required:
      - id
      - kind
      - name
      - webhookUrl
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          webhookUrl:
            type: string
    WebhookIntegration:
      required:
      - id
      - kind
      - name
      - webhookUrls
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractIntegration'
      - type: object
        properties:
          webhookUrls:
            type: array
            items:
              type: string
          headers:
            type: array
            items:
              type: string
    IntegrationOverview:
      required:
      - id
      - kind
      - name
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
        name:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
    EventFilteringConfiguration:
      type: object
      properties:
        query:
          maxLength: 2048
          minLength: 0
          type: string
        ruleIds:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        eventTypes:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - incident
            - critical
            - warning
            - change
            - online
            - offline
            - agent_monitoring_issue
            - none
    ValidatedAlertingConfiguration:
      required:
      - alertName
      - eventFilteringConfiguration
      - id
      - integrationIds
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        alertName:
          maxLength: 256
          minLength: 0
          type: string
        muteUntil:
          type: integer
          format: int64
        integrationIds:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        eventFilteringConfiguration:
          $ref: '#/components/schemas/EventFilteringConfiguration'
        customPayload:
          maxLength: 65536
          minLength: 0
          type: string
        lastUpdated:
          minimum: 1
          type: integer
          format: int64
        invalid:
          type: boolean
        alertChannelNames:
          uniqueItems: true
          type: array
          items:
            type: string
        applicationNames:
          uniqueItems: true
          type: array
          items:
            type: string
    AlertingConfigurationWithLastUpdated:
      required:
      - alertName
      - eventFilteringConfiguration
      - id
      - integrationIds
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        alertName:
          maxLength: 256
          minLength: 0
          type: string
        muteUntil:
          type: integer
          format: int64
        integrationIds:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        eventFilteringConfiguration:
          $ref: '#/components/schemas/EventFilteringConfiguration'
        customPayload:
          maxLength: 65536
          minLength: 0
          type: string
        lastUpdated:
          minimum: 1
          type: integer
          format: int64
    AlertingConfiguration:
      required:
      - alertName
      - eventFilteringConfiguration
      - id
      - integrationIds
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        alertName:
          maxLength: 256
          minLength: 0
          type: string
        muteUntil:
          type: integer
          format: int64
        integrationIds:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        eventFilteringConfiguration:
          $ref: '#/components/schemas/EventFilteringConfiguration'
        customPayload:
          maxLength: 65536
          minLength: 0
          type: string
    ValidatedAlertingChannelInputInfo:
      required:
      - id
      - label
      - type
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        label:
          maxLength: 256
          minLength: 0
          type: string
        query:
          maxLength: 2048
          minLength: 0
          type: string
        eventTypes:
          maxItems: 6
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - incident
            - critical
            - warning
            - change
            - online
            - offline
            - agent_monitoring_issue
            - none
        selectedEvents:
          type: integer
          format: int32
        enabled:
          type: boolean
        type:
          type: string
          enum:
          - Alert
          - WebsiteSmartAlert
          - ApplicationSmartAlert
        entityId:
          type: string
        invalid:
          type: boolean
    BuiltInEventSpecificationWithLastUpdated:
      required:
      - hyperParams
      - id
      - name
      - ruleInputs
      - shortPluginId
      type: object
      properties:
        id:
          maxLength: 2048
          minLength: 0
          type: string
        shortPluginId:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        description:
          maxLength: 2048
          minLength: 0
          type: string
        hyperParams:
          maxItems: 32
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/HyperParam'
        ruleInputs:
          maxItems: 32
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/RuleInput'
        severity:
          type: integer
          format: int32
        triggering:
          type: boolean
        enabled:
          type: boolean
        lastUpdated:
          minimum: 1
          type: integer
          format: int64
    HyperParam:
      required:
      - description
      - id
      - name
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        description:
          maxLength: 2048
          minLength: 0
          type: string
        defaultValue:
          type: number
          format: double
        minValue:
          type: number
          format: double
        maxValue:
          type: number
          format: double
        valueFormat:
          type: string
          enum:
          - NUMBER
          - BYTES
          - PERCENTAGE
          - MILLIS
          - SECONDS
          - MICROS
          - RATE
          - BYTE_RATE
          - UNDEFINED
    RuleInput:
      required:
      - inputKind
      - inputName
      type: object
      properties:
        inputKind:
          type: string
          enum:
          - METRIC
          - SNAPSHOT_FIELD
          - EVENT
          - DERIVED_METRIC
          - METRIC_PATTERN
        inputName:
          maxLength: 256
          minLength: 0
          type: string
    BuiltInEventSpecification:
      required:
      - hyperParams
      - id
      - name
      - ruleInputs
      - shortPluginId
      type: object
      properties:
        id:
          maxLength: 2048
          minLength: 0
          type: string
        shortPluginId:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        description:
          maxLength: 2048
          minLength: 0
          type: string
        hyperParams:
          maxItems: 32
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/HyperParam'
        ruleInputs:
          maxItems: 32
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/RuleInput'
        severity:
          type: integer
          format: int32
        triggering:
          type: boolean
        enabled:
          type: boolean
    EventSpecificationInfo:
      required:
      - entityType
      - id
      - name
      - type
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        description:
          type: string
        entityType:
          type: string
        type:
          type: string
          enum:
          - BUILT_IN
          - CUSTOM
        severity:
          type: integer
          format: int32
        triggering:
          type: boolean
        invalid:
          type: boolean
        enabled:
          type: boolean
    AbstractRule:
      required:
      - ruleType
      type: object
      properties:
        ruleType:
          type: string
          description: "Values: `\"THRESHOLD\"`  `\"SYSTEM\"`  `\"ENTITY_VERIFICATION\"\
            `"
        severity:
          type: integer
          format: int32
      discriminator:
        propertyName: ruleType
        mapping:
          threshold: '#/components/schemas/ThresholdRule'
          system: '#/components/schemas/SystemRule'
          entity_verification: '#/components/schemas/EntityVerificationRule'
    CustomEventSpecificationWithLastUpdated:
      required:
      - entityType
      - id
      - name
      - rules
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        entityType:
          maxLength: 64
          minLength: 0
          type: string
        query:
          maxLength: 2048
          minLength: 0
          type: string
        triggering:
          type: boolean
        description:
          maxLength: 65536
          minLength: 0
          type: string
        expirationTime:
          type: integer
          format: int64
        enabled:
          type: boolean
        rules:
          maxItems: 1
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AbstractRule'
        lastUpdated:
          minimum: 1
          type: integer
          format: int64
    EntityVerificationRule:
      required:
      - matchingEntityLabel
      - matchingEntityType
      - matchingOperator
      - ruleType
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractRule'
      - type: object
        properties:
          matchingEntityType:
            maxLength: 64
            minLength: 0
            type: string
          matchingOperator:
            type: string
            enum:
            - is
            - contains
            - startsWith
            - endsWith
          matchingEntityLabel:
            maxLength: 256
            minLength: 0
            type: string
          offlineDuration:
            type: integer
            format: int64
    MetricPattern:
      required:
      - operator
      - prefix
      type: object
      properties:
        prefix:
          type: string
        postfix:
          type: string
        placeholder:
          type: string
        operator:
          type: string
          enum:
          - is
          - contains
          - startsWith
          - endsWith
          - any
    SystemRule:
      required:
      - ruleType
      - systemRuleId
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractRule'
      - type: object
        properties:
          systemRuleId:
            type: string
    ThresholdRule:
      required:
      - conditionOperator
      - ruleType
      type: object
      allOf:
      - $ref: '#/components/schemas/AbstractRule'
      - type: object
        properties:
          metricName:
            maxLength: 256
            minLength: 0
            type: string
          metricPattern:
            $ref: '#/components/schemas/MetricPattern'
          rollup:
            type: integer
            format: int64
          window:
            type: integer
            format: int64
          aggregation:
            type: string
            enum:
            - sum
            - avg
            - min
            - max
          conditionOperator:
            type: string
            enum:
            - '>'
            - '>='
            - <
            - <=
            - =
            - '!='
          conditionValue:
            type: number
            format: double
    SystemRuleLabel:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    CustomEventSpecification:
      required:
      - entityType
      - id
      - name
      - rules
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        entityType:
          maxLength: 64
          minLength: 0
          type: string
        query:
          maxLength: 2048
          minLength: 0
          type: string
        triggering:
          type: boolean
        description:
          maxLength: 65536
          minLength: 0
          type: string
        expirationTime:
          type: integer
          format: int64
        enabled:
          type: boolean
        rules:
          maxItems: 1
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AbstractRule'
    HistoricBaseline:
      required:
      - baseline
      - operator
      - seasonality
      - type
      type: object
      allOf:
      - $ref: '#/components/schemas/Threshold'
      - type: object
        properties:
          seasonality:
            type: string
            enum:
            - WEEKLY
            - DAILY
          baseline:
            type: array
            items:
              type: array
              items:
                type: number
          deviationFactor:
            type: number
            format: double
    SlownessWebsiteAlertRule:
      required:
      - aggregation
      - alertType
      - metricName
      type: object
      allOf:
      - $ref: '#/components/schemas/WebsiteAlertRule'
      - type: object
        properties:
          aggregation:
            type: string
            enum:
            - SUM
            - MEAN
            - MAX
            - MIN
            - P25
            - P50
            - P75
            - P90
            - P95
            - P98
            - P99
            - DISTINCT_COUNT
    SpecificJsErrorsWebsiteAlertRule:
      required:
      - alertType
      - metricName
      - operator
      type: object
      allOf:
      - $ref: '#/components/schemas/WebsiteAlertRule'
      - type: object
        properties:
          operator:
            type: string
            enum:
            - EQUALS
            - CONTAINS
            - LESS_THAN
            - LESS_OR_EQUAL_THAN
            - GREATER_THAN
            - GREATER_OR_EQUAL_THAN
            - NOT_EMPTY
            - NOT_EQUAL
            - NOT_CONTAIN
            - IS_EMPTY
            - NOT_BLANK
            - IS_BLANK
            - STARTS_WITH
            - ENDS_WITH
            - NOT_STARTS_WITH
            - NOT_ENDS_WITH
          value:
            type: string
    StaticThreshold:
      required:
      - operator
      - type
      type: object
      allOf:
      - $ref: '#/components/schemas/Threshold'
      - type: object
        properties:
          value:
            minimum: 0
            type: number
            format: double
    StatusCodeWebsiteAlertRule:
      required:
      - alertType
      - metricName
      - operator
      - value
      type: object
      allOf:
      - $ref: '#/components/schemas/WebsiteAlertRule'
      - type: object
        properties:
          operator:
            type: string
            enum:
            - EQUALS
            - CONTAINS
            - LESS_THAN
            - LESS_OR_EQUAL_THAN
            - GREATER_THAN
            - GREATER_OR_EQUAL_THAN
            - NOT_EMPTY
            - NOT_EQUAL
            - NOT_CONTAIN
            - IS_EMPTY
            - NOT_BLANK
            - IS_BLANK
            - STARTS_WITH
            - ENDS_WITH
            - NOT_STARTS_WITH
            - NOT_ENDS_WITH
          value:
            type: string
    Threshold:
      required:
      - operator
      - type
      type: object
      properties:
        type:
          type: string
        operator:
          type: string
          enum:
          - '>'
          - '>='
          - <
          - <=
        lastUpdated:
          minimum: 0
          type: integer
          format: int64
      discriminator:
        propertyName: type
        mapping:
          staticThreshold: '#/components/schemas/StaticThreshold'
          historicBaseline: '#/components/schemas/HistoricBaseline'
    ThroughputWebsiteAlertRule:
      required:
      - alertType
      - metricName
      type: object
      allOf:
      - $ref: '#/components/schemas/WebsiteAlertRule'
    UserImpactWebsiteTimeThreshold:
      required:
      - type
      type: object
      allOf:
      - $ref: '#/components/schemas/WebsiteTimeThreshold'
      - type: object
        properties:
          users:
            minimum: 1
            type: integer
            format: int32
          userPercentage:
            maximum: 1.0
            exclusiveMaximum: false
            minimum: 0.0
            exclusiveMinimum: true
            type: number
            format: double
    ViolationsInPeriodWebsiteTimeThreshold:
      required:
      - type
      type: object
      allOf:
      - $ref: '#/components/schemas/WebsiteTimeThreshold'
      - type: object
        properties:
          violations:
            maximum: 12
            minimum: 1
            type: integer
            format: int32
    ViolationsInSequenceWebsiteTimeThreshold:
      required:
      - type
      type: object
      allOf:
      - $ref: '#/components/schemas/WebsiteTimeThreshold'
    WebsiteAlertConfigWithMetadata:
      required:
      - alertChannelIds
      - description
      - id
      - name
      - rule
      - tagFilters
      - threshold
      - timeThreshold
      - websiteId
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 0
          type: string
        description:
          maxLength: 65536
          minLength: 0
          type: string
        websiteId:
          maxLength: 64
          minLength: 0
          type: string
        severity:
          type: integer
          format: int32
        triggering:
          type: boolean
        tagFilters:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TagFilter'
        rule:
          $ref: '#/components/schemas/WebsiteAlertRule'
        baseline:
          $ref: '#/components/schemas/HistoricBaseline'
        alertChannelIds:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        granularity:
          type: integer
          format: int32
          enum:
          - 60000
          - 300000
          - 600000
          - 900000
          - 1200000
          - 1800000
          default: 600000
        timeThreshold:
          $ref: '#/components/schemas/WebsiteTimeThreshold'
        id:
          maxLength: 64
          minLength: 0
          type: string
        created:
          minimum: 1
          type: integer
          format: int64
        readOnly:
          type: boolean
        enabled:
          type: boolean
        threshold:
          $ref: '#/components/schemas/Threshold'
    WebsiteAlertRule:
      required:
      - alertType
      - metricName
      type: object
      properties:
        alertType:
          type: string
        metricName:
          type: string
      discriminator:
        propertyName: alertType
        mapping:
          specificJsError: '#/components/schemas/SpecificJsErrorsWebsiteAlertRule'
          slowness: '#/components/schemas/SlownessWebsiteAlertRule'
          statusCode: '#/components/schemas/StatusCodeWebsiteAlertRule'
          throughput: '#/components/schemas/ThroughputWebsiteAlertRule'
    WebsiteTimeThreshold:
      required:
      - type
      type: object
      properties:
        type:
          type: string
        timeWindow:
          type: integer
          format: int64
      discriminator:
        propertyName: type
        mapping:
          violationsInSequence: '#/components/schemas/ViolationsInSequenceWebsiteTimeThreshold'
          violationsInPeriod: '#/components/schemas/ViolationsInPeriodWebsiteTimeThreshold'
          userImpactOfViolationsInSequence: '#/components/schemas/UserImpactWebsiteTimeThreshold'
    ConfigVersion:
      required:
      - id
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        created:
          minimum: 1
          type: integer
          format: int64
        enabled:
          type: boolean
    WebsiteAlertConfig:
      required:
      - alertChannelIds
      - description
      - name
      - rule
      - tagFilters
      - threshold
      - timeThreshold
      - websiteId
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 0
          type: string
        description:
          maxLength: 65536
          minLength: 0
          type: string
        websiteId:
          maxLength: 64
          minLength: 0
          type: string
        severity:
          type: integer
          format: int32
        triggering:
          type: boolean
        tagFilters:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TagFilter'
        rule:
          $ref: '#/components/schemas/WebsiteAlertRule'
        threshold:
          $ref: '#/components/schemas/Threshold'
        alertChannelIds:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        granularity:
          type: integer
          format: int32
          enum:
          - 60000
          - 300000
          - 600000
          - 900000
          - 1200000
          - 1800000
          default: 600000
        timeThreshold:
          $ref: '#/components/schemas/WebsiteTimeThreshold'
    PluginResult:
      type: object
      properties:
        plugin:
          type: string
        label:
          type: string
    MetricInstance:
      required:
      - description
      - formatter
      - label
      - metricId
      - pluginId
      type: object
      properties:
        formatter:
          type: string
          enum:
          - NUMBER
          - BYTES
          - PERCENTAGE
          - MILLIS
          - SECONDS
          - MICROS
          - RATE
          - BYTE_RATE
          - UNDEFINED
        label:
          type: string
        description:
          type: string
        metricId:
          type: string
        pluginId:
          type: string
        custom:
          type: boolean
    SearchFieldResult:
      type: object
      properties:
        keyword:
          type: string
        description:
          type: string
        context:
          type: string
        termType:
          type: string
        fixedValues:
          type: array
          items:
            type: string
    TreeNode:
      type: object
      properties:
        snapshotId:
          type: string
        type:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/TreeNode'
    TreeNodeResult:
      type: object
      properties:
        tree:
          type: array
          items:
            $ref: '#/components/schemas/TreeNode'
    InfrastructureMetricResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MetricItem'
    MetricItem:
      type: object
      properties:
        snapshotId:
          type: string
        plugin:
          type: string
        from:
          type: integer
          format: int64
        to:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
        label:
          type: string
        host:
          type: string
        metrics:
          type: object
          additionalProperties:
            type: array
            items:
              type: array
              items:
                type: number
    GetCombinedMetrics:
      required:
      - metrics
      - plugin
      type: object
      properties:
        timeFrame:
          $ref: '#/components/schemas/TimeFrame'
        plugin:
          type: string
        query:
          type: string
        snapshotIds:
          maxItems: 30
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
        rollup:
          type: integer
          format: int32
        metrics:
          maxItems: 5
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
    MonitoringState:
      type: object
      properties:
        firstKnownReportingTime:
          type: integer
          format: int64
        hostCount:
          type: integer
          format: int32
        serverlessCount:
          type: integer
          format: int32
    SoftwareUser:
      type: object
      properties:
        host:
          type: string
        container:
          type: string
        process:
          type: string
    SoftwareVersion:
      required:
      - name
      - origin
      - type
      - usedBy
      - version
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        origin:
          type: string
        type:
          type: string
        usedBy:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SoftwareUser'
    HealthState:
      type: object
      properties:
        health:
          type: string
          enum:
          - RED
          - YELLOW
          - GREEN
        messages:
          type: array
          items:
            type: string
    InstanaVersionInfo:
      type: object
      properties:
        branch:
          type: string
        commit:
          type: string
        imageTag:
          type: string
    UsageResult:
      type: object
      properties:
        time:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/UsageResultItems'
    UsageResultItems:
      type: object
      properties:
        name:
          type: string
        sims:
          type: integer
          format: int64
    ReleaseScope:
      type: object
      properties:
        serviceId:
          type: string
        applicationId:
          type: string
    ReleaseWithMetadata:
      required:
      - id
      - name
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        start:
          minimum: 1
          type: integer
          format: int64
        lastUpdated:
          minimum: 1
          type: integer
          format: int64
        scopes:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/ReleaseScope'
    ApplicationScope:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 0
          type: string
    Release:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 0
          type: string
        start:
          minimum: 1
          type: integer
          format: int64
        services:
          maxItems: 10
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ServiceScope'
        applications:
          maxItems: 10
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ApplicationScope'
    ServiceScope:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 0
          type: string
        scopedTo:
          $ref: '#/components/schemas/ServiceScopedTo'
    ServiceScopedTo:
      required:
      - applications
      type: object
      properties:
        applications:
          maxItems: 10
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ApplicationScope'
    ApiToken:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        canConfigureServiceMapping:
          type: boolean
        canConfigureEumApplications:
          type: boolean
        canConfigureMobileAppMonitoring:
          type: boolean
        canConfigureUsers:
          type: boolean
        canInstallNewAgents:
          type: boolean
        canSeeUsageInformation:
          type: boolean
        canConfigureIntegrations:
          type: boolean
        canSeeOnPremLicenseInformation:
          type: boolean
        canConfigureRoles:
          type: boolean
        canConfigureCustomAlerts:
          type: boolean
        canConfigureApiTokens:
          type: boolean
        canConfigureAgentRunMode:
          type: boolean
        canViewAuditLog:
          type: boolean
        canConfigureObjectives:
          type: boolean
        canConfigureAgents:
          type: boolean
        canConfigureAuthenticationMethods:
          type: boolean
        canConfigureApplications:
          type: boolean
        canConfigureTeams:
          type: boolean
        canConfigureReleases:
          type: boolean
        canConfigureLogManagement:
          type: boolean
        canCreatePublicCustomDashboards:
          type: boolean
        canViewLogs:
          type: boolean
        canViewTraceDetails:
          type: boolean
        canConfigureSessionSettings:
          type: boolean
        canConfigureServiceLevelIndicators:
          type: boolean
        canConfigureGlobalAlertPayload:
          type: boolean
    AuditLogEntry:
      required:
      - action
      - actor
      - id
      - message
      - meta
      type: object
      properties:
        id:
          type: string
        action:
          type: string
        message:
          type: string
        actor:
          $ref: '#/components/schemas/LogEntryActor'
        timestamp:
          type: integer
          format: int64
        meta:
          type: object
          additionalProperties:
            type: object
    AuditLogResponse:
      type: object
      properties:
        total:
          type: integer
          format: int64
        entries:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogEntry'
    LogEntryActor:
      required:
      - id
      - name
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - USER
          - API_TOKEN
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Member:
      required:
      - email
      - userId
      type: object
      properties:
        userId:
          type: string
        email:
          type: string
    PermissionSet:
      required:
      - applicationIds
      - kubernetesClusterUUIDs
      - kubernetesNamespaceUIDs
      - mobileAppIds
      - name
      - permissions
      - websiteIds
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          type: string
        permissions:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        applicationIds:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        kubernetesClusterUUIDs:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        kubernetesNamespaceUIDs:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        websiteIds:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        mobileAppIds:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        infraDfqFilter:
          type: string
    RbacGroup:
      required:
      - members
      - name
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          type: string
        members:
          maxItems: 1024
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Member'
        permissionSet:
          $ref: '#/components/schemas/PermissionSet'
    MaintenanceWindow:
      required:
      - id
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        start:
          minimum: 0
          type: integer
          format: int64
        end:
          minimum: 1
          type: integer
          format: int64
    ValidatedMaintenanceConfigWithStatus:
      required:
      - id
      - name
      - query
      - status
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        query:
          maxLength: 2048
          minLength: 0
          type: string
        windows:
          maxItems: 1
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceWindow'
        lastUpdated:
          minimum: 1
          type: integer
          format: int64
        status:
          type: string
          enum:
          - UNSCHEDULED
          - SCHEDULED
          - ACTIVE
          - FINISHED
        invalid:
          type: boolean
    MaintenanceConfigWithLastUpdated:
      required:
      - id
      - name
      - query
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        query:
          maxLength: 2048
          minLength: 0
          type: string
        windows:
          maxItems: 1
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceWindow'
        lastUpdated:
          minimum: 1
          type: integer
          format: int64
    MaintenanceConfig:
      required:
      - id
      - name
      - query
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        query:
          maxLength: 2048
          minLength: 0
          type: string
        windows:
          maxItems: 1
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MaintenanceWindow'
    Role:
      required:
      - id
      - name
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        name:
          maxLength: 256
          minLength: 0
          type: string
        canConfigureServiceMapping:
          type: boolean
        canConfigureEumApplications:
          type: boolean
        canConfigureMobileAppMonitoring:
          type: boolean
        canConfigureUsers:
          type: boolean
        canInstallNewAgents:
          type: boolean
        canSeeUsageInformation:
          type: boolean
        canConfigureIntegrations:
          type: boolean
        canSeeOnPremLicenseInformation:
          type: boolean
        canConfigureRoles:
          type: boolean
        canConfigureCustomAlerts:
          type: boolean
        canConfigureApiTokens:
          type: boolean
        canConfigureAgentRunMode:
          type: boolean
        canViewAuditLog:
          type: boolean
        canConfigureObjectives:
          type: boolean
        canConfigureAgents:
          type: boolean
        canConfigureAuthenticationMethods:
          type: boolean
        canConfigureApplications:
          type: boolean
        canConfigureTeams:
          type: boolean
        restrictedAccess:
          type: boolean
        canConfigureReleases:
          type: boolean
        canConfigureLogManagement:
          type: boolean
        canCreatePublicCustomDashboards:
          type: boolean
        canViewLogs:
          type: boolean
        canViewTraceDetails:
          type: boolean
        canConfigureSessionSettings:
          type: boolean
        canConfigureServiceLevelIndicators:
          type: boolean
        canConfigureGlobalAlertPayload:
          type: boolean
    SessionSettings:
      type: object
      properties:
        tokenLifeTimeInMillis:
          maximum: 604800000
          minimum: 900000
          type: integer
          format: int64
        idleTimeInMillis:
          maximum: 28800000
          minimum: 60000
          type: integer
          format: int64
    SyntheticCallRule:
      required:
      - matchSpecification
      - name
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 1
          type: string
        description:
          maxLength: 2048
          minLength: 0
          type: string
        matchSpecification:
          $ref: '#/components/schemas/MatchExpressionDTO'
        enabled:
          type: boolean
    SyntheticCallWithDefaultsConfig:
      required:
      - customRules
      - defaultRules
      type: object
      properties:
        defaultRulesEnabled:
          type: boolean
        customRules:
          maxItems: 500
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/SyntheticCallRule'
        defaultRules:
          type: array
          items:
            $ref: '#/components/schemas/SyntheticCallRule'
    SyntheticCallConfig:
      required:
      - customRules
      type: object
      properties:
        defaultRulesEnabled:
          type: boolean
        customRules:
          maxItems: 500
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/SyntheticCallRule'
    UserResult:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        fullName:
          type: string
        roleId:
          type: string
    UsersResult:
      type: object
      properties:
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserResult'
    SliReport:
      type: object
      properties:
        sli:
          type: number
          format: double
        slo:
          type: number
          format: double
        totalErrorBudget:
          type: integer
          format: int32
        errorBudgetRemaining:
          type: integer
          format: int32
        fromTimestamp:
          type: integer
          format: int64
        toTimestamp:
          type: integer
          format: int64
        violationDistribution:
          type: object
          additionalProperties:
            type: integer
            format: int32
    ApplicationSliEntity:
      required:
      - boundaryScope
      - sliType
      type: object
      allOf:
      - $ref: '#/components/schemas/SliEntity'
      - type: object
        properties:
          applicationId:
            type: string
          serviceId:
            type: string
          endpointId:
            type: string
          boundaryScope:
            type: string
            enum:
            - ALL
            - INBOUND
    AvailabilitySliEntity:
      required:
      - badEventFilters
      - boundaryScope
      - goodEventFilters
      - sliType
      type: object
      allOf:
      - $ref: '#/components/schemas/SliEntity'
      - type: object
        properties:
          applicationId:
            type: string
          serviceId:
            type: string
          endpointId:
            type: string
          boundaryScope:
            type: string
            enum:
            - ALL
            - INBOUND
          goodEventFilters:
            maxItems: 32
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/TagFilter'
          badEventFilters:
            maxItems: 32
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/TagFilter'
    InfrastructureSliEntity:
      required:
      - instanceAggregation
      - query
      - sliType
      type: object
      allOf:
      - $ref: '#/components/schemas/SliEntity'
      - type: object
        properties:
          instanceAggregation:
            type: string
            enum:
            - SUM
            - MEAN
            - MAX
            - MIN
            - P25
            - P50
            - P75
            - P90
            - P95
            - P98
            - P99
            - DISTINCT_COUNT
          query:
            type: string
    MetricConfiguration:
      required:
      - metricName
      type: object
      properties:
        metricName:
          type: string
        metricAggregation:
          type: string
          enum:
          - SUM
          - MEAN
          - MAX
          - MIN
          - P25
          - P50
          - P75
          - P90
          - P95
          - P98
          - P99
          - DISTINCT_COUNT
        threshold:
          minimum: 0.0
          exclusiveMinimum: true
          type: number
          format: double
    SliConfigurationWithLastUpdated:
      required:
      - id
      - sliEntity
      - sliName
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        sliName:
          maxLength: 256
          minLength: 0
          type: string
        initialEvaluationTimestamp:
          type: integer
          format: int64
        metricConfiguration:
          $ref: '#/components/schemas/MetricConfiguration'
        sliEntity:
          $ref: '#/components/schemas/SliEntity'
        lastUpdated:
          minimum: 1
          type: integer
          format: int64
    SliEntity:
      required:
      - sliType
      type: object
      properties:
        sliType:
          type: string
      discriminator:
        propertyName: sliType
        mapping:
          application: '#/components/schemas/ApplicationSliEntity'
          custom: '#/components/schemas/InfrastructureSliEntity'
          availability: '#/components/schemas/AvailabilitySliEntity'
    SliConfiguration:
      required:
      - id
      - sliEntity
      - sliName
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 0
          type: string
        sliName:
          maxLength: 256
          minLength: 0
          type: string
        initialEvaluationTimestamp:
          type: integer
          format: int64
        metricConfiguration:
          $ref: '#/components/schemas/MetricConfiguration'
        sliEntity:
          $ref: '#/components/schemas/SliEntity'
    BeaconGroupsResult:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/WebsiteBeaconGroupsItem'
        canLoadMore:
          type: boolean
        totalHits:
          minimum: 0
          type: integer
          format: int64
        totalRepresentedItemCount:
          minimum: 0
          type: integer
          format: int64
    WebsiteBeaconGroupsItem:
      required:
      - cursor
      - metrics
      - name
      type: object
      properties:
        name:
          type: string
        earliestTimestamp:
          minimum: 0
          type: integer
          format: int64
        cursor:
          $ref: '#/components/schemas/IngestionOffsetCursor'
        metrics:
          type: object
          additionalProperties:
            type: array
            items:
              type: array
              items:
                type: number
    GetWebsiteBeaconGroups:
      required:
      - group
      - metrics
      - type
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/CursorPagination'
        timeFrame:
          $ref: '#/components/schemas/TimeFrame'
        group:
          $ref: '#/components/schemas/WebsiteBeaconTagGroup'
        order:
          $ref: '#/components/schemas/Order'
        type:
          type: string
          enum:
          - PAGELOAD
          - RESOURCELOAD
          - HTTPREQUEST
          - ERROR
          - CUSTOM
          - PAGE_CHANGE
        tagFilters:
          maxItems: 32
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/TagFilter'
        metrics:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/WebsiteMonitoringMetricsConfiguration'
    WebsiteBeaconTagGroup:
      required:
      - groupbyTag
      - groupbyTagEntity
      type: object
      properties:
        groupbyTag:
          maxLength: 256
          minLength: 0
          type: string
        groupbyTagSecondLevelKey:
          maxLength: 256
          minLength: 0
          type: string
        groupbyTagEntity:
          type: string
          enum:
          - NOT_APPLICABLE
          - DESTINATION
          - SOURCE
    WebsiteMonitoringMetricsConfiguration:
      required:
      - aggregation
      - metric
      type: object
      properties:
        metric:
          type: string
        granularity:
          type: integer
          format: int32
        aggregation:
          type: string
          enum:
          - SUM
          - MEAN
          - MAX
          - MIN
          - P25
          - P50
          - P75
          - P90
          - P95
          - P98
          - P99
          - DISTINCT_COUNT
    BeaconResult:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/WebsiteBeaconsItem'
        canLoadMore:
          type: boolean
        totalHits:
          minimum: 0
          type: integer
          format: int64
        totalRepresentedItemCount:
          minimum: 0
          type: integer
          format: int64
    StackTraceLine:
      required:
      - file
      type: object
      properties:
        file:
          type: string
        name:
          type: string
        line:
          minimum: -1
          type: integer
          format: int32
        column:
          minimum: -1
          type: integer
          format: int32
        translationStatus:
          minimum: -1
          type: integer
          format: int32
        translationExplanation:
          type: string
    WebsiteBeaconsItem:
      required:
      - beacon
      - cursor
      type: object
      properties:
        beacon:
          $ref: '#/components/schemas/WebsiteMonitoringBeacon'
        cursor:
          $ref: '#/components/schemas/IngestionOffsetCursor'
    WebsiteMonitoringBeacon:
      required:
      - beaconId
      - locationOrigin
      - locationUrl
      - pageLoadId
      - type
      - websiteId
      - websiteLabel
      type: object
      properties:
        websiteId:
          type: string
        websiteLabel:
          type: string
        page:
          type: string
        phase:
          type: string
        timestamp:
          minimum: 1
          type: integer
          format: int64
        clockSkew:
          minimum: -1
          type: integer
          format: int64
        duration:
          minimum: 0
          type: integer
          format: int64
        batchSize:
          minimum: 1
          type: integer
          format: int64
        accurateTimingsAvailable:
          type: boolean
        deprecations:
          maxItems: 16
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
        pageLoadId:
          type: string
        sessionId:
          type: string
        beaconId:
          type: string
        backendTraceId:
          type: string
        type:
          type: string
        customEventName:
          type: string
        meta:
          type: object
          additionalProperties:
            type: string
        locationUrl:
          type: string
        locationOrigin:
          type: string
        locationPath:
          type: string
        errorCount:
          minimum: 0
          type: integer
          format: int64
        errorMessage:
          type: string
        errorId:
          type: string
        errorType:
          type: string
        stackTrace:
          type: string
        stackTraceParsingStatus:
          minimum: -1
          type: integer
          format: int32
        parsedStackTrace:
          maxItems: 64
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/StackTraceLine'
        stackTraceReadability:
          minimum: 0
          type: integer
          format: int32
        componentStack:
          type: string
        userIp:
          type: string
        userId:
          type: string
        userName:
          type: string
        userEmail:
          type: string
        userLanguages:
          maxItems: 5
          minItems: 0
          type: array
          items:
            type: string
        deviceType:
          type: string
        connectionType:
          type: string
        browserName:
          type: string
        browserVersion:
          type: string
        osName:
          type: string
        osVersion:
          type: string
        windowHidden:
          type: boolean
        windowWidth:
          minimum: -1
          type: integer
          format: int32
        windowHeight:
          minimum: -1
          type: integer
          format: int32
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        accuracyRadius:
          minimum: -1
          type: integer
          format: int64
        city:
          type: string
        subdivision:
          type: string
        subdivisionCode:
          type: string
        country:
          type: string
        countryCode:
          type: string
        continent:
          type: string
        continentCode:
          type: string
        httpCallUrl:
          type: string
        httpCallOrigin:
          type: string
        httpCallPath:
          type: string
        httpCallMethod:
          type: string
        httpCallStatus:
          maximum: 599
          minimum: -1
          type: integer
          format: int32
        httpCallCorrelationAttempted:
          type: boolean
        httpCallAsynchronous:
          type: boolean
        initiator:
          type: string
        resourceType:
          type: string
        cacheInteraction:
          type: string
        encodedBodySize:
          minimum: -1
          type: integer
          format: int64
        decodedBodySize:
          minimum: -1
          type: integer
          format: int64
        transferSize:
          minimum: -1
          type: integer
          format: int64
        unloadTime:
          minimum: -1
          type: integer
          format: int64
        redirectTime:
          minimum: -1
          type: integer
          format: int64
        appCacheTime:
          minimum: -1
          type: integer
          format: int64
        dnsTime:
          minimum: -1
          type: integer
          format: int64
        tcpTime:
          minimum: -1
          type: integer
          format: int64
        sslTime:
          minimum: -1
          type: integer
          format: int64
        requestTime:
          minimum: -1
          type: integer
          format: int64
        responseTime:
          minimum: -1
          type: integer
          format: int64
        processingTime:
          minimum: -1
          type: integer
          format: int64
        onLoadTime:
          minimum: -1
          type: integer
          format: int64
        backendTime:
          minimum: -1
          type: integer
          format: int64
        frontendTime:
          minimum: -1
          type: integer
          format: int64
        domTime:
          minimum: -1
          type: integer
          format: int64
        childrenTime:
          minimum: -1
          type: integer
          format: int64
        firstPaintTime:
          minimum: -1
          type: integer
          format: int64
        firstContentfulPaintTime:
          minimum: -1
          type: integer
          format: int64
        largestContentfulPaintTime:
          minimum: -1
          type: integer
          format: int64
        firstInputDelayTime:
          minimum: -1
          type: integer
          format: int64
        cumulativeLayoutShift:
          type: number
          format: double
        cspBlockedUri:
          type: string
        cspEffectiveDirective:
          type: string
        cspOriginalPolicy:
          type: string
        cspDisposition:
          type: string
        cspSample:
          type: string
        cspSourceFile:
          type: string
        cspLineNumber:
          type: integer
          format: int64
        cspColumnNumber:
          type: integer
          format: int64
        snippetVersion:
          type: string
        graphqlOperationName:
          type: string
        graphqlOperationType:
          type: string
    GetWebsiteBeacons:
      required:
      - type
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/CursorPagination'
        timeFrame:
          $ref: '#/components/schemas/TimeFrame'
        type:
          type: string
          enum:
          - PAGELOAD
          - RESOURCELOAD
          - HTTPREQUEST
          - ERROR
          - CUSTOM
          - PAGE_CHANGE
        tagFilters:
          maxItems: 32
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/TagFilter'
    WebsiteMonitoringMetricDescription:
      type: object
      properties:
        metricId:
          type: string
        label:
          type: string
        formatter:
          type: string
        description:
          type: string
        aggregations:
          uniqueItems: true
          type: array
          items:
            type: string
        beaconTypes:
          uniqueItems: true
          type: array
          items:
            type: string
    Website:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
        appName:
          type: string
        name:
          type: string
    WebsiteMetricResult:
      type: object
      properties:
        empty:
          type: boolean
    GetWebsiteMetrics:
      required:
      - metrics
      - type
      type: object
      properties:
        timeFrame:
          $ref: '#/components/schemas/TimeFrame'
        metrics:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/WebsiteMonitoringMetricsConfiguration'
        type:
          type: string
          enum:
          - PAGELOAD
          - RESOURCELOAD
          - HTTPREQUEST
          - ERROR
          - CUSTOM
          - PAGE_CHANGE
        tagFilters:
          maxItems: 32
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/TagFilter'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: "In order to use the REST API, you need to create an API token\
        \ and assign permissions to it. API tokens are managed only by the account\
        \ owner role, who can create multiple API tokens with varying permissions.\
        \ API token management can found in Settings â Access Control â API Tokens."
      name: authorization
      in: header
      scheme: apiToken
      x-description: authorization
x-tagGroups:
- name: Infrastructure Monitoring
  tags:
  - Infrastructure Metrics
  - Infrastructure Resources
  - Infrastructure Catalog
- name: Application Monitoring
  tags:
  - Application Metrics
  - Application Resources
  - Application Catalog
  - Application Analyze
  - Application Settings
- name: Website Monitoring
  tags:
  - Website Metrics
  - Website Catalog
  - Website Analyze
  - Website Configuration
- name: Event
  tags:
  - Events
  - Event Settings
- name: Host Agent
  tags:
  - Host Agent
- name: Settings
  tags:
  - User
  - Groups
  - Audit Log
  - API Token
  - Maintenance Configuration
  - Synthetic Calls
  - Session Settings
- name: Pipeline Feedback
  tags:
  - Releases
- name: Service Level Indicators
  tags:
  - SLI Settings
  - SLI Report
- name: Instana
  tags:
  - Health
  - Usage
